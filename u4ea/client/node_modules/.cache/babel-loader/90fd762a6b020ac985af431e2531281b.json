{"ast":null,"code":"var _jsxFileName = \"/Users/AtokAdos/Desktop/CS_Projects/U4Ea/u4ea/client/src/components/Webapp.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./Header.js\";\nimport \"../css/style.css\";\nimport data from '../data.json';\nimport { Modal } from 'react-bootstrap';\nimport { BinauralBeat } from '../js/beats';\n/* \n    Front end interface for the simple webapp. Uses functions from beats.js n the js folder for \n    binaural beat creation.\n*/\n\n/* Local Audio Player */\n\nvar context = new AudioContext();\nvar bBeat = new BinauralBeat(context);\nvar volume = context.createGain();\n\nclass Webapp extends Component {\n  constructor() {\n    super();\n\n    this.handlePause = e => {\n      this.setState({\n        playing: false\n      });\n      bBeat.stop();\n    };\n\n    this.handlePlay = e => {\n      this.setState({\n        playing: true\n      });\n      var options = {\n        pitch: this.state.frequency,\n        beatRate: this.state.frequencies[this.state.id]\n      };\n      bBeat = new BinauralBeat(context, options);\n      bBeat.connect(volume);\n      volume.connect(context.destination);\n      volume.gain.value = .8;\n      bBeat.start();\n    };\n\n    this.feelingOpen = e => {\n      this.setState({\n        isfeelingOpen: true\n      });\n    };\n\n    this.feelingClose = e => {\n      this.setState({\n        isfeelingOpen: false\n      });\n    };\n\n    this.boostOpen = e => {\n      this.setState({\n        isboostOpen: true\n      });\n    };\n\n    this.boostClose = e => {\n      this.setState({\n        isboostOpen: false\n      });\n    };\n\n    this.activityOpen = e => {\n      this.setState({\n        isactivityOpen: true\n      });\n    };\n\n    this.activityClose = e => {\n      this.setState({\n        isactivityOpen: false\n      });\n    };\n\n    this.state = {\n      feelings: [],\n      boosts: [],\n      activities: [],\n      feeling: \"\",\n      boost: \"\",\n      activity: \"\",\n      playing: false,\n      paused: false,\n      frequency: \"\",\n      id: \"\",\n      frequencies: [],\n      isfeelingOpen: false,\n      isBoostOpen: false,\n      isActivityOpen: false\n    };\n  }\n  /* Get Data for feelings, boosts, activities on load */\n\n\n  componentWillMount() {\n    this.setState({\n      feelings: data.feelings,\n      boosts: data.boosts,\n      activities: data.activities\n    });\n  }\n  /* Change feeling state on Click */\n\n\n  setFeeling(name, f) {\n    bBeat.stop();\n    this.feelingClose();\n    this.setState({\n      feeling: name,\n      frequency: f\n    });\n\n    if (this.state.playing) {\n      this.handlePlay();\n    }\n  }\n  /* Set boost state on Click */\n\n\n  setBoost(name, f) {\n    bBeat.stop();\n    this.boostClose();\n    this.setState({\n      boost: name,\n      id: f\n    });\n\n    if (this.state.playing) {\n      this.handlePlay();\n    }\n  }\n  /* Set activity state on Click */\n\n\n  setActivity(name, f) {\n    bBeat.stop();\n    this.activityClose();\n    this.setState({\n      activity: name,\n      frequencies: f\n    });\n\n    if (this.state.playing) {\n      this.handlePlay();\n    }\n  }\n  /* Pause the binaural beat */\n\n\n  render() {\n    /* Render feelings visuals from data.json */\n    const feelings = this.state.feelings.map((item, key) => /*#__PURE__*/React.createElement(\"div\", {\n      key: item.name,\n      className: \"feelingContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chakra\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(`../img/feelings/${item.color}.png`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${item.color}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      className: \"frequencyText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, item.frequency_range), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, \" \", item.title, \" \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }\n    }, \" Shift from: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }\n    }, \" \", item.shift_from, \" \"), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 25\n      }\n    }, \" Shift to: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 25\n      }\n    }, \" \", item.shift_to, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }), item.feelings.map((feeling, key) => /*#__PURE__*/React.createElement(\"button\", {\n      key: feeling,\n      value: feeling,\n      className: `btn btn-success ${item.color}`,\n      onClick: e => this.setFeeling(e.target.value, item.frequency),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 25\n      }\n    }, feeling)))));\n    /* Render boosts visuals from data.json */\n\n    const boost = this.state.boosts.map((item, key) => /*#__PURE__*/React.createElement(\"div\", {\n      key: item.id,\n      className: \"feelingContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chakra\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(`../img/boosts/${item.name}.png`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${item.logo}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      className: \"frequencyText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }\n    }, item.frequency), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 25\n      }\n    }, \" Shift from: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 25\n      }\n    }, \" \", item.shift_from, \" \"), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 25\n      }\n    }, \" Shift to: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 25\n      }\n    }, \" \", item.shift_to, \" \"))), /*#__PURE__*/React.createElement(\"button\", {\n      key: item.name,\n      value: item.name,\n      className: `btn btn-success ${item.logo}`,\n      onClick: e => this.setBoost(e.target.value, item.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }, item.name)));\n    /* Render activities from data.json */\n\n    const activity = this.state.activities.map((item, key) =>\n    /*#__PURE__*/\n\n    /* Render buttons */\n    React.createElement(\"button\", {\n      key: item.name,\n      value: item.name,\n      className: 'btn btn-success activity',\n      onClick: e => this.setActivity(e.target.value, item.frequencies),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }, item.name));\n    /* isPlalyable */\n\n    const playable = this.state.feeling !== \"\" && this.state.boost !== \"\" && this.state.activity !== \"\";\n    /* Disable/enable play button based on isPlayable */\n\n    let player;\n\n    if (playable) {\n      if (this.state.playing) {\n        player = /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-default btn-circle glyphicon glyphicon-pause\",\n          onClick: this.handlePause,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 26\n          }\n        });\n      } else {\n        player = /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-default btn-circle glyphicon glyphicon-play-circle\",\n          onClick: this.handlePlay,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 26\n          }\n        });\n      }\n    } else {\n      player = /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-default btn-circle glyphicon glyphicon-play-circle\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 22\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }\n    }, console.log(this.state), console.log(this.state.frequency), console.log(this.state.frequencies[this.state.id]), /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 25\n      }\n    }, \"I WANT TO FEEL\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"selectText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 33\n      }\n    }, this.state.feeling ? /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-light\",\n      onClick: this.feelingOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 59\n      }\n    }, this.state.feeling) : /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-light\",\n      onClick: this.feelingOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 41\n      }\n    }, \"Select Mood\")))), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.isfeelingOpen,\n      onHide: this.feelingClose,\n      animation: false,\n      dialogClassName: \"my-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"selector\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 37\n      }\n    }, \"Choose a feeling:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 37\n      }\n    }), feelings)), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.feelingClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 33\n      }\n    }, \"Cancel\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"waveWrapper waveAnimation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"waveWrapperInner bgMiddle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wave waveMiddle\",\n      style: {\n        backgroundImage: \"url(\" + 'http://front-end-noobs.com/jecko/img/wave-mid.png' + \")\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 25\n      }\n    }, \"AND BOOST MY\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"selectText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 33\n      }\n    }, this.state.boost ? /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-light\",\n      onClick: this.boostOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 57\n      }\n    }, this.state.boost) : /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-light\",\n      onClick: this.boostOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 41\n      }\n    }, \"Select Mood\"))), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.isboostOpen,\n      onHide: this.boostClose,\n      animation: false,\n      dialogClassName: \"my-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"selector\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 41\n      }\n    }, \"Choose a boost:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 41\n      }\n    }), boost)), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.boostClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 37\n      }\n    }, \"Cancel\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 25\n      }\n    }, \"WHILE I\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"selectText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 33\n      }\n    }, this.state.activity ? /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-light\",\n      onClick: this.activityOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 60\n      }\n    }, this.state.activity) : /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-light\",\n      onClick: this.activityOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 41\n      }\n    }, \"Select Mood\"))), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.isactivityOpen,\n      onHide: this.activityClose,\n      animation: false,\n      dialogClassName: \"my-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"selector\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 41\n      }\n    }, \"Choose an activity:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 41\n      }\n    }), activity)), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.activityClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 37\n      }\n    }, \"Cancel\")))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bg-light play-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 17\n      }\n    }, player));\n  }\n\n}\n\nexport default Webapp;","map":{"version":3,"sources":["/Users/AtokAdos/Desktop/CS_Projects/U4Ea/u4ea/client/src/components/Webapp.js"],"names":["React","Component","Header","data","Modal","BinauralBeat","context","AudioContext","bBeat","volume","createGain","Webapp","constructor","handlePause","e","setState","playing","stop","handlePlay","options","pitch","state","frequency","beatRate","frequencies","id","connect","destination","gain","value","start","feelingOpen","isfeelingOpen","feelingClose","boostOpen","isboostOpen","boostClose","activityOpen","isactivityOpen","activityClose","feelings","boosts","activities","feeling","boost","activity","paused","isBoostOpen","isActivityOpen","componentWillMount","setFeeling","name","f","setBoost","setActivity","render","map","item","key","require","color","frequency_range","title","shift_from","shift_to","target","logo","playable","player","console","log","backgroundImage"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport Header from \"./Header.js\"\n\nimport \"../css/style.css\";\nimport data from '../data.json';\nimport { Modal } from 'react-bootstrap';\n\nimport { BinauralBeat } from '../js/beats'\n\n/* \n    Front end interface for the simple webapp. Uses functions from beats.js n the js folder for \n    binaural beat creation.\n*/\n\n/* Local Audio Player */\nvar context = new AudioContext()\nvar bBeat = new BinauralBeat(context);\nvar volume = context.createGain();\n\n\n\nclass Webapp extends Component {\n    constructor() {\n        super();\n        this.state = {\n            feelings: [],\n            boosts: [],\n            activities:\n                [],\n            feeling: \"\",\n            boost: \"\",\n            activity: \"\",\n            playing: false,\n            paused: false,\n            frequency: \"\",\n            id: \"\",\n            frequencies: [],\n            isfeelingOpen: false,\n            isBoostOpen: false,\n            isActivityOpen: false,\n        }\n    }\n\n    /* Get Data for feelings, boosts, activities on load */\n    componentWillMount() {\n        this.setState({\n            feelings: data.feelings,\n            boosts: data.boosts,\n            activities: data.activities,\n        })\n    }\n\n    /* Change feeling state on Click */\n    setFeeling(name, f) {\n        bBeat.stop();\n        this.feelingClose();\n        this.setState({\n            feeling: name,\n            frequency: f,\n        })\n        if (this.state.playing) {\n            this.handlePlay()\n        }\n    }\n\n    /* Set boost state on Click */\n    setBoost(name, f) {\n        bBeat.stop();\n        this.boostClose();\n        this.setState({\n            boost: name,\n            id: f,\n        })\n        if (this.state.playing) {\n            this.handlePlay()\n        }\n    }\n\n    /* Set activity state on Click */\n    setActivity(name, f) {\n        bBeat.stop();\n        this.activityClose();\n        this.setState({\n            activity: name,\n            frequencies: f,\n        })\n        if (this.state.playing) {\n            this.handlePlay()\n        }\n    }\n\n    /* Pause the binaural beat */\n    handlePause = e => {\n        this.setState({\n            playing: false,\n        })\n        bBeat.stop();\n    }\n\n    /* Play the binaural beat based on selected feeling, boost, and activity */\n    handlePlay = e => {\n        this.setState({\n            playing: true\n        })\n        var options = {\n            pitch: this.state.frequency,\n            beatRate: this.state.frequencies[this.state.id],\n        }\n        bBeat = new BinauralBeat(context, options)\n        bBeat.connect(volume)\n        volume.connect(context.destination)\n        volume.gain.value = .8\n\n        bBeat.start()\n    }\n\n    /* Open feeling selection modal */\n    feelingOpen = e => {\n        this.setState({\n            isfeelingOpen: true\n        })\n    }\n\n    /* Close feeling selection modal */\n    feelingClose = e => {\n        this.setState({\n            isfeelingOpen: false\n        })\n    }\n\n    /* Open boost selection modal */\n    boostOpen = e => {\n        this.setState({\n            isboostOpen: true\n        })\n    }\n\n    /* Close boost selection modal */\n    boostClose = e => {\n        this.setState({\n            isboostOpen: false\n        })\n    }\n\n    /* Open activity selection modal */\n    activityOpen = e => {\n        this.setState({\n            isactivityOpen: true\n        })\n    }\n\n    /* Close activity selection modal */\n    activityClose = e => {\n        this.setState({\n            isactivityOpen: false\n        })\n    }\n\n    render() {\n        /* Render feelings visuals from data.json */\n        const feelings = this.state.feelings.map((item, key) =>\n            <div key={item.name} className=\"feelingContainer\">\n                <div className=\"chakra\">\n                    <img src={require(`../img/feelings/${item.color}.png`)} />\n                </div>\n                <div className={`${item.color}`}>\n                    <b className=\"frequencyText\">{item.frequency_range}</b>\n                    <br />\n                    <b> {item.title} </b>\n                    <br />\n                    <div className=\"details\">\n                        <b> Shift from: </b>\n                        <p> {item.shift_from} </p>\n                        <b> Shift to: </b>\n                        <p> {item.shift_to} </p>\n                    </div>\n                    <div>\n                    </div>\n                    {/* Render buttons */}\n                    {item.feelings.map((feeling, key) => (\n                        <button key={feeling} value={feeling} className={`btn btn-success ${item.color}`} onClick={e => this.setFeeling(e.target.value, item.frequency)}>\n                            {feeling}\n                        </button>\n                    ))}\n                </div>\n            </div>\n        );\n\n        /* Render boosts visuals from data.json */\n        const boost = this.state.boosts.map((item, key) =>\n            <div key={item.id} className=\"feelingContainer\">\n                <div className=\"chakra\">\n                    <img src={require(`../img/boosts/${item.name}.png`)} />\n                </div>\n                <div className={`${item.logo}`}>\n                    <b className=\"frequencyText\">{item.frequency}</b>\n\n                    <div className=\"details\">\n                        <b> Shift from: </b>\n                        <p> {item.shift_from} </p>\n                        <b> Shift to: </b>\n                        <p> {item.shift_to} </p>\n                    </div>\n                </div>\n                {/* Render Buttons */}\n                <button key={item.name} value={item.name} className={`btn btn-success ${item.logo}`} onClick={e => this.setBoost(e.target.value, item.id)}>\n                    {item.name}\n                </button>\n\n            </div>\n        )\n\n        /* Render activities from data.json */\n        const activity = this.state.activities.map((item, key) =>\n        /* Render buttons */\n            <button key={item.name} value={item.name} className={'btn btn-success activity'} onClick={e => this.setActivity(e.target.value, item.frequencies)}>\n                {item.name}\n            </button>\n        );\n\n        /* isPlalyable */\n        const playable = ((this.state.feeling !== \"\") &&\n            (this.state.boost !== \"\") &&\n            (this.state.activity !== \"\"))\n\n        /* Disable/enable play button based on isPlayable */\n        let player;\n        if (playable) {\n            if (this.state.playing) {\n                player = <button className=\"btn btn-default btn-circle glyphicon glyphicon-pause\" onClick={this.handlePause}></button>\n            } else {\n                player = <button className=\"btn btn-default btn-circle glyphicon glyphicon-play-circle\" onClick={this.handlePlay}></button>\n            }\n        } else {\n            player = <button className=\"btn btn-default btn-circle glyphicon glyphicon-play-circle\" disabled></button>\n        }\n\n        return (\n            <div>\n                {console.log(this.state)}\n                {console.log(this.state.frequency)}\n                {console.log(this.state.frequencies[this.state.id])}\n\n                <Header />\n                <div>\n                    <div className=\"div1\">\n                        <div className=\"text\">\n                            I WANT TO FEEL\n                            <br />\n                            <div className=\"selectText\">\n                                <b>\n                                    {this.state.feeling ? <button type=\"button\" className=\"btn btn-light\" onClick={this.feelingOpen}>\n                                        {this.state.feeling}\n                                    </button> :\n                                        <button type=\"button\" className=\"btn btn-light\" onClick={this.feelingOpen}>\n                                            Select Mood\n                                      </button>\n                                    }\n                                </b>\n                            </div>\n                        </div>\n                        <Modal show={this.state.isfeelingOpen} onHide={this.feelingClose} animation={false}\n                            dialogClassName=\"my-modal\">\n                            <Modal.Header>\n                            </Modal.Header>\n                            <Modal.Body>\n                                <div className=\"selector\">\n                                    <h1>Choose a feeling:</h1>\n                                    <br />\n                                    {feelings}\n                                </div>\n\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <button onClick={this.feelingClose}>Cancel</button>\n\n                            </Modal.Footer>\n                        </Modal>\n                        <div className=\"waveWrapper waveAnimation\">\n                            <div className=\"waveWrapperInner bgMiddle\">\n                                <div className=\"wave waveMiddle\" style={{ backgroundImage: \"url(\" + 'http://front-end-noobs.com/jecko/img/wave-mid.png' + \")\" }}></div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"div2\">\n                        <div className=\"text\">\n                            AND BOOST MY\n                            <br />\n                            <div className=\"selectText\">\n                                <b>\n                                    {this.state.boost ? <button type=\"button\" className=\"btn btn-light\" onClick={this.boostOpen}>\n                                        {this.state.boost}\n                                    </button> :\n                                        <button className=\"btn btn-light\" onClick={this.boostOpen}>\n                                            Select Mood\n                                      </button>\n                                    }\n                                </b>\n                            </div>\n                            <Modal show={this.state.isboostOpen} onHide={this.boostClose} animation={false}\n                                dialogClassName=\"my-modal\">\n                                <Modal.Header>\n                                </Modal.Header>\n                                <Modal.Body>\n                                    <div className=\"selector\">\n                                        <h1>Choose a boost:</h1>\n                                        <br />\n                                        {boost}\n                                    </div>\n\n                                </Modal.Body>\n                                <Modal.Footer>\n                                    <button onClick={this.boostClose}>Cancel</button>\n\n                                </Modal.Footer>\n                            </Modal>\n                        </div>\n                    </div>\n                    <div className=\"div3\">\n                        <div className=\"text\">\n                            WHILE I\n                            <br />\n                            <div className=\"selectText\">\n                                <b>\n                                    {this.state.activity ? <button type=\"button\" className=\"btn btn-light\" onClick={this.activityOpen}>\n                                        {this.state.activity}\n                                    </button> :\n                                        <button className=\"btn btn-light\" onClick={this.activityOpen}>\n                                            Select Mood\n                                      </button>\n                                    }\n                                </b>\n                            </div>\n                            <Modal show={this.state.isactivityOpen} onHide={this.activityClose} animation={false}\n                                dialogClassName=\"my-modal\">\n                                <Modal.Header>\n                                </Modal.Header>\n                                <Modal.Body>\n                                    <div className=\"selector\">\n                                        <h1>Choose an activity:</h1>\n                                        <br />\n                                        {activity}\n                                    </div>\n                                </Modal.Body>\n                                <Modal.Footer>\n                                    <button onClick={this.activityClose}>Cancel</button>\n\n                                </Modal.Footer>\n                            </Modal>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"bg-light play-bar\">\n                    {player}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Webapp;"]},"metadata":{},"sourceType":"module"}