{"ast":null,"code":"import GOOGLE_SCRIPT from 'authConstants.js';\nimport GOOGLE_CLIENT_ID from 'authConstants.js';\nimport GOOGLE_SCOPE from 'authConstants.js';\nimport FACEBOOK_SCRIPT from 'authConstants.js';\nimport FACEBOOK_SCOPE from 'authConstants.js';\nimport FACEBOOK_VERSION from 'authConstants.js';\nimport FACEBOOK_APP_ID from 'authConstants.js';\nimport PROVIDER from 'authConstants.js';\nexport function* authorizeWithGoogle() {\n  const provider = PROVIDER.GOOGLE;\n\n  try {\n    if (!googleAuthAvailable()) {\n      yield call(() => new Promise(resolve => loadScript(GOOGLE_SCRIPT, () => {\n        const g = window.gapi;\n        g.load('auth2', () => {\n          g.auth2.init({\n            client_id: GOOGLE_CLIENT_ID,\n            scope: GOOGLE_SCOPE\n          });\n          resolve();\n        });\n      })));\n    }\n\n    const ga = window.gapi.auth2.getAuthInstance();\n    const googleUser = yield call(() => new Promise((resolve, reject) => ga.signIn().then(resolve, reject)));\n    const {\n      id_token\n    } = googleUser.getAuthResponse();\n    yield* authorize(provider, id_token);\n  } catch (err) {\n    reportError(provider, err);\n  }\n}\nexport function* authorizeWithFacebook() {\n  const provider = PROVIDER.FACEBOOK;\n\n  try {\n    if (!window.FB) {\n      yield call(() => new Promise(resolve => loadScript(FACEBOOK_SCRIPT, resolve)));\n      yield call(() => new Promise(resolve => {\n        window.fbAsyncInit = () => {\n          window.FB.init({\n            appId: FACEBOOK_APP_ID,\n            version: FACEBOOK_VERSION\n          });\n          resolve();\n        };\n      }));\n    }\n\n    const fb = window.FB;\n    const response = yield call(() => new Promise(resolve => fb.login(resolve, {\n      scope: FACEBOOK_SCOPE\n    })));\n\n    if (response && response.authResponse) {\n      const {\n        accessToken\n      } = response.authResponse;\n      if (!accessToken) return;\n      yield* authorize(provider, accessToken);\n    }\n  } catch (err) {\n    reportError(provider, err);\n  }\n}\nexport const loadScript = (src, onLoad) => {\n  const script = document.createElement('script');\n  script.src = src;\n  script.async = true;\n  document.body.appendChild(script);\n  script.onload = onLoad;\n};","map":{"version":3,"sources":["/Users/AtokAdos/Desktop/CS_Projects/U4Ea/u4ea/client/src/js/auth.js"],"names":["GOOGLE_SCRIPT","GOOGLE_CLIENT_ID","GOOGLE_SCOPE","FACEBOOK_SCRIPT","FACEBOOK_SCOPE","FACEBOOK_VERSION","FACEBOOK_APP_ID","PROVIDER","authorizeWithGoogle","provider","GOOGLE","googleAuthAvailable","call","Promise","resolve","loadScript","g","window","gapi","load","auth2","init","client_id","scope","ga","getAuthInstance","googleUser","reject","signIn","then","id_token","getAuthResponse","authorize","err","reportError","authorizeWithFacebook","FACEBOOK","FB","fbAsyncInit","appId","version","fb","response","login","authResponse","accessToken","src","onLoad","script","document","createElement","async","body","appendChild","onload"],"mappings":"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","sourcesContent":["import GOOGLE_SCRIPT from 'authConstants.js';\nimport GOOGLE_CLIENT_ID from 'authConstants.js'\nimport GOOGLE_SCOPE from 'authConstants.js'\nimport FACEBOOK_SCRIPT from 'authConstants.js'\nimport FACEBOOK_SCOPE from 'authConstants.js'\nimport FACEBOOK_VERSION from 'authConstants.js'\nimport FACEBOOK_APP_ID from 'authConstants.js'\nimport PROVIDER from 'authConstants.js'\n\n\n\nexport function* authorizeWithGoogle() {\n    const provider = PROVIDER.GOOGLE\n    try {\n      if (!googleAuthAvailable()) {\n        yield call(() => new Promise(resolve => loadScript(\n          GOOGLE_SCRIPT,\n          () => {\n            const g = window.gapi\n            g.load('auth2', () => {\n              g.auth2.init({\n                client_id: GOOGLE_CLIENT_ID,\n                scope: GOOGLE_SCOPE\n              })\n              resolve()\n            })\n          }\n        )))\n      }\n      const ga = window.gapi.auth2.getAuthInstance()\n      const googleUser = yield call(() => new Promise((resolve, reject) => ga.signIn().then(resolve, reject)))\n      const { id_token } = googleUser.getAuthResponse()\n  \n      yield * authorize(provider, id_token)\n    } catch(err) {\n      reportError(provider, err)\n    }\n  }\n  \n  export function* authorizeWithFacebook() {\n    const provider = PROVIDER.FACEBOOK\n    try {\n      if (!window.FB) {\n        yield call(() => new Promise(resolve => loadScript(FACEBOOK_SCRIPT, resolve)))\n        yield call(() => new Promise(resolve => {\n          window.fbAsyncInit = () => {\n            window.FB.init({\n              appId: FACEBOOK_APP_ID,\n              version : FACEBOOK_VERSION\n            })\n            resolve()\n          }\n        }))\n      }\n  \n      const fb = window.FB\n      const response = yield call(() => new Promise(resolve => fb.login(resolve, { scope: FACEBOOK_SCOPE })))\n      if (response && response.authResponse) {\n        const { accessToken } = response.authResponse\n        if (!accessToken) return\n    \n        yield * authorize(provider, accessToken)\n      }\n    } catch(err) {\n      reportError(provider, err)\n    }\n  }\n\n\n  export const loadScript = (src, onLoad) => {\n    const script = document.createElement('script')\n    script.src = src\n    script.async = true\n    document.body.appendChild(script)\n    script.onload = onLoad\n  }"]},"metadata":{},"sourceType":"module"}