{"ast":null,"code":"var _jsxFileName = \"/Users/AtokAdos/Desktop/CS_Projects/U4Ea/u4ea/client/src/components/Webapp.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./Header.js\";\nimport \"../css/style.css\";\nimport data from '../data.json';\nimport { BinauralBeat } from '../js/beats';\nvar context = new AudioContext();\nvar bBeat = new BinauralBeat(context);\nvar volume = context.createGain();\n\nclass Webapp extends Component {\n  constructor() {\n    super();\n\n    this.handlePause = e => {\n      this.setState({\n        playing: false\n      });\n      bBeat.stop();\n    };\n\n    this.handlePlay = e => {\n      this.setState({\n        playing: true\n      });\n      var options = {\n        pitch: this.state.frequency,\n        beatRate: this.state.frequencies[this.state.id]\n      };\n      bBeat = new BinauralBeat(context, options);\n      bBeat.connect(volume);\n      volume.connect(context.destination);\n      volume.gain.value = .8;\n      bBeat.start();\n    };\n\n    this.state = {\n      feelings: [],\n      boosts: [],\n      activities: [],\n      feeling: \"\",\n      boost: \"\",\n      activity: \"\",\n      playing: false,\n      paused: false,\n      frequency: \"\",\n      id: \"\",\n      frequencies: []\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      feelings: data.feelings,\n      boosts: data.boosts,\n      activities: data.activities\n    });\n  }\n\n  setFeeling(name, f) {\n    bBeat.stop();\n    this.setState({\n      feeling: name,\n      frequency: f\n    });\n\n    if (this.state.playing) {\n      this.handlePlay();\n    }\n  }\n\n  setBoost(name, f) {\n    bBeat.stop();\n    this.setState({\n      boost: name,\n      id: f\n    });\n\n    if (this.state.playing) {\n      this.handlePlay();\n    }\n  }\n\n  setActivity(name, f) {\n    bBeat.stop();\n    this.setState({\n      activity: name,\n      frequencies: f\n    });\n\n    if (this.state.playing) {\n      this.handlePlay();\n    }\n  }\n\n  render() {\n    const feelings = this.state.feelings.map((item, key) => /*#__PURE__*/React.createElement(\"div\", {\n      key: item.name,\n      className: \"feelingContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chakra\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(`../img/feelings/${item.color}.png`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${item.color}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      className: \"frequencyText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, item.frequency_range), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, \" \", item.title, \" \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }, \" Shift from: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, \" \", item.shift_from, \" \"), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, \" Shift to: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, \" \", item.shift_to, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }), item.feelings.map((feeling, key) => /*#__PURE__*/React.createElement(\"button\", {\n      key: feeling,\n      value: feeling,\n      className: `btn btn-success ${item.color}`,\n      onClick: e => this.setFeeling(e.target.value, item.frequency),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }, feeling)))));\n    const boost = this.state.boosts.map((item, key) => /*#__PURE__*/React.createElement(\"div\", {\n      key: item.id,\n      className: \"feelingContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chakra\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(`../img/boosts/${item.name}.png`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${item.logo}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      className: \"frequencyText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, item.frequency), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }, \" Shift from: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }, \" \", item.shift_from, \" \"), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, \" Shift to: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, \" \", item.shift_to, \" \"))), /*#__PURE__*/React.createElement(\"button\", {\n      key: item.name,\n      value: item.name,\n      className: `btn btn-success ${item.logo}`,\n      onClick: e => this.setBoost(e.target.value, item.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, item.name)));\n    const activity = this.state.activities.map((item, key) => /*#__PURE__*/React.createElement(\"button\", {\n      key: item.name,\n      value: item.name,\n      className: 'btn btn-success activity',\n      onClick: e => this.setActivity(e.target.value, item.frequencies),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, item.name));\n    const playable = this.state.feeling !== \"\" && this.state.boost !== \"\" && this.state.activity !== \"\";\n    let player;\n\n    if (playable) {\n      if (this.state.playing) {\n        player = /*#__PURE__*/React.createElement(\"button\", {\n          className: \"glyphicon glyphicon-pause\",\n          onClick: this.handlePause,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 26\n          }\n        });\n      } else {\n        player = /*#__PURE__*/React.createElement(\"button\", {\n          className: \"glyphicon glyphicon-play-circle\",\n          onClick: this.handlePlay,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 26\n          }\n        });\n      }\n    } else {\n      player = /*#__PURE__*/React.createElement(\"button\", {\n        className: \"glyphicon glyphicon-play-circle\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 22\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, console.log(this.state), console.log(this.state.frequency), console.log(this.state.frequencies[this.state.id]), /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    }, \"I WANT TO FEEL\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"selectText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 33\n      }\n    }, this.state.feeling ? this.state.feeling : /*#__PURE__*/React.createElement(\"button\", {\n      onClick: showFeelingModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 41\n      }\n    }, \"Select Mood\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal fade\",\n      id: \"selectorModal\",\n      tabIndex: \"-1\",\n      role: \"dialog\",\n      \"aria-labelledby\": \"selectorModal\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-dialog modal-dialog-centered\",\n      role: \"document\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 45\n      }\n    }, \"\\xD7\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"overlay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"selector\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 41\n      }\n    }, \"Choose one:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 37\n      }\n    }), feelings)))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }\n    }, \"AND BOOST MY\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"selectText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 33\n      }\n    }, this.state.boost ? this.state.boost : /*#__PURE__*/React.createElement(\"a\", {\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#selectorModal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 41\n      }\n    }, \"Select Mood\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"overlay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"selector\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 33\n      }\n    }, \"Choose one:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 37\n      }\n    }), boost)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 25\n      }\n    }, \"WHILE I\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"selectText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 33\n      }\n    }, this.state.activity ? this.state.activity : /*#__PURE__*/React.createElement(\"a\", {\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#selectorModal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 41\n      }\n    }, \"Select Mood\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"overlay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"selector\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 33\n      }\n    }, \"Choose one:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 37\n      }\n    }), activity))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bg-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }\n    }, player));\n  }\n\n}\n\nexport default Webapp;","map":{"version":3,"sources":["/Users/AtokAdos/Desktop/CS_Projects/U4Ea/u4ea/client/src/components/Webapp.js"],"names":["React","Component","Header","data","BinauralBeat","context","AudioContext","bBeat","volume","createGain","Webapp","constructor","handlePause","e","setState","playing","stop","handlePlay","options","pitch","state","frequency","beatRate","frequencies","id","connect","destination","gain","value","start","feelings","boosts","activities","feeling","boost","activity","paused","componentWillMount","setFeeling","name","f","setBoost","setActivity","render","map","item","key","require","color","frequency_range","title","shift_from","shift_to","target","logo","playable","player","console","log","showFeelingModal"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport Header from \"./Header.js\"\n\nimport \"../css/style.css\";\nimport data from '../data.json';\n\nimport { BinauralBeat } from '../js/beats'\n\nvar context = new AudioContext()\nvar bBeat = new BinauralBeat(context);\nvar volume = context.createGain();\n\n\nclass Webapp extends Component {\n    constructor() {\n        super();\n        this.state = {\n            feelings: [],\n            boosts: [],\n            activities:\n                [],\n            feeling: \"\",\n            boost: \"\",\n            activity: \"\",\n            playing: false,\n            paused: false,\n            frequency: \"\",\n            id: \"\",\n            frequencies: [],\n        }\n    }\n\n    componentWillMount() {\n        this.setState({\n            feelings: data.feelings,\n            boosts: data.boosts,\n            activities: data.activities,\n        })\n\n    }\n\n    setFeeling(name, f) {\n        bBeat.stop();\n        this.setState({\n            feeling: name,\n            frequency: f,\n        })\n        if (this.state.playing) {\n            this.handlePlay()\n        }\n    }\n\n    setBoost(name, f) {\n        bBeat.stop();\n        this.setState({\n            boost: name,\n            id: f,\n        })\n        if (this.state.playing) {\n            this.handlePlay()\n        }\n    }\n\n    setActivity(name, f) {\n        bBeat.stop();\n        this.setState({\n            activity: name,\n            frequencies: f,\n        })\n        if (this.state.playing) {\n            this.handlePlay()\n        }\n    }\n\n    handlePause = e => {\n        this.setState({\n            playing: false,\n        })\n        bBeat.stop();\n\n\n    }\n\n    handlePlay = e => {\n        this.setState({\n            playing: true\n        })\n        var options = {\n            pitch: this.state.frequency,\n            beatRate: this.state.frequencies[this.state.id],\n        }\n        bBeat = new BinauralBeat(context, options)\n        bBeat.connect(volume)\n        volume.connect(context.destination)\n        volume.gain.value = .8\n\n        bBeat.start()\n    }\n\n    render() {\n        const feelings = this.state.feelings.map((item, key) =>\n            <div key={item.name} className=\"feelingContainer\">\n                <div className=\"chakra\">\n                    <img src={require(`../img/feelings/${item.color}.png`)} />\n                </div>\n                <div className={`${item.color}`}>\n                    <b className=\"frequencyText\">{item.frequency_range}</b>\n                    <br />\n                    <b> {item.title} </b>\n                    <br />\n                    <div className=\"details\">\n                        <b> Shift from: </b>\n                        <p> {item.shift_from} </p>\n                        <b> Shift to: </b>\n                        <p> {item.shift_to} </p>\n                    </div>\n                    <div>\n                    </div>\n                    {item.feelings.map((feeling, key) => (\n                        <button key={feeling} value={feeling} className={`btn btn-success ${item.color}`} onClick={e => this.setFeeling(e.target.value, item.frequency)}>\n                            {feeling}\n                        </button>\n                    ))}\n                </div>\n            </div>\n        );\n\n        const boost = this.state.boosts.map((item, key) =>\n            <div key={item.id} className=\"feelingContainer\">\n                <div className=\"chakra\">\n                    <img src={require(`../img/boosts/${item.name}.png`)} />\n                </div>\n                <div className={`${item.logo}`}>\n                    <b className=\"frequencyText\">{item.frequency}</b>\n\n                    <div className=\"details\">\n                        <b> Shift from: </b>\n                        <p> {item.shift_from} </p>\n                        <b> Shift to: </b>\n                        <p> {item.shift_to} </p>\n                    </div>\n                </div>\n                <button key={item.name} value={item.name} className={`btn btn-success ${item.logo}`} onClick={e => this.setBoost(e.target.value, item.id)}>\n                    {item.name}\n                </button>\n\n            </div>\n        )\n\n        const activity = this.state.activities.map((item, key) =>\n            <button key={item.name} value={item.name} className={'btn btn-success activity'} onClick={e => this.setActivity(e.target.value, item.frequencies)}>\n                {item.name}\n            </button>\n        );\n\n        const playable = ((this.state.feeling !== \"\") &&\n            (this.state.boost !== \"\") &&\n            (this.state.activity !== \"\"))\n\n        let player;\n        if (playable) {\n            if (this.state.playing) {\n                player = <button className=\"glyphicon glyphicon-pause\" onClick={this.handlePause}></button>\n            } else {\n                player = <button className=\"glyphicon glyphicon-play-circle\" onClick={this.handlePlay}></button>\n            }\n        } else {\n            player = <button className=\"glyphicon glyphicon-play-circle\" disabled></button>\n        }\n\n        return (\n            <div>\n                {console.log(this.state)}\n                {console.log(this.state.frequency)}\n                {console.log(this.state.frequencies[this.state.id])}\n\n                <Header />\n                <div>\n                    <div className=\"div1\">\n                        <div className=\"text\">\n                            I WANT TO FEEL\n                            <br />\n                            <div className=\"selectText\">\n                                <b>\n                                    {this.state.feeling ? this.state.feeling :\n                                        <button onClick={showFeelingModal}>\n                                        Select Mood\n                                      </button>\n                                    }\n                                </b>\n                            </div>\n                        </div>\n                        <div className=\"modal fade\" id=\"selectorModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"selectorModal\"\n                            aria-hidden=\"true\">\n                            <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                                <div className=\"modal-content\">\n                                    <div className=\"modal-header\">\n                                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                            <span aria-hidden=\"true\">&times;</span>\n                                        </button>\n                                    </div>\n                                    <div className=\"overlay\">\n                                        <div className=\"selector\">\n                                            Choose one:\n                                    <br />\n                                            {feelings}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"div2\">\n                        <div className=\"text\">\n                            AND BOOST MY\n                            <br />\n                            <div className=\"selectText\">\n                                <b>\n                                    {this.state.boost ? this.state.boost :\n                                        <a data-toggle=\"modal\" data-target=\"#selectorModal\">Select Mood</a>\n                                    }\n                                </b>\n                            </div>\n                            <div className=\"overlay\">\n                                <div className=\"selector\">\n                                    Choose one:\n                                    <br />\n                                    {boost}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"div3\">\n                        <div className=\"text\">\n                            WHILE I\n                            <br />\n                            <div className=\"selectText\">\n                                <b>\n                                    {this.state.activity ? this.state.activity :\n                                        <a data-toggle=\"modal\" data-target=\"#selectorModal\">Select Mood</a>\n                                    }\n                                </b>\n                            </div>\n                            <div className=\"overlay\">\n                                <div className=\"selector\">\n                                    Choose one:\n                                    <br />\n                                    {activity}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"bg-light\">\n                    {player}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Webapp;"]},"metadata":{},"sourceType":"module"}