{"ast":null,"code":"var _jsxFileName = \"/Users/AtokAdos/Desktop/CS_Projects/U4Ea/u4ea/client/src/components/Webapp.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./Header.js\";\nimport \"../css/style.css\";\nimport data from '../data.json';\n(function () {\n  var BinauralBeat;\n\n  BinauralBeat = function () {\n    BinauralBeat.SINE = 'sine';\n    BinauralBeat.SQUARE = 'square';\n    BinauralBeat.SAWTOOTH = 'sawtooth';\n    BinauralBeat.TRIANGLE = 'triangle';\n\n    function BinauralBeat(ctx, options) {\n      var _ref, _ref1, _ref2, _ref3;\n\n      this.input = ctx.createGain();\n      this.output = ctx.createGain();\n      options = options != null ? options : {};\n      this.pitch = (_ref = options.pitch) != null ? _ref : 440;\n      this.beatRate = (_ref1 = options.beats) != null ? _ref1 : 5;\n      this.waveType = (_ref2 = options.waveType) != null ? _ref2 : this.constructor.SINE;\n      this.compressNodes = (_ref3 = options.compressNodes) != null ? _ref3 : false;\n      this.started = false;\n\n      this._createInternalNodes(ctx);\n\n      this._routeNodes();\n\n      this.setPitch(this.pitch);\n      this.setWaveType(this.waveType);\n    }\n\n    BinauralBeat.prototype._createInternalNodes = function (ctx) {\n      this.leftChannel = ctx.createOscillator();\n      this.rightChannel = ctx.createOscillator();\n      this.channelMerger = ctx.createChannelMerger();\n      return this.compressor = ctx.createDynamicsCompressor();\n    };\n\n    BinauralBeat.prototype._routeNodes = function () {\n      if (this.compressNodes) {\n        this.input.connect(this.compressor);\n        this.channelMerger.connect(this.compressor);\n        return this.compressor.connect(this.output);\n      } else {\n        this.input.connect(this.output);\n        return this.channelMerger.connect(this.output);\n      }\n    };\n\n    BinauralBeat.prototype._startOscillators = function () {\n      this.leftChannel.start(0);\n      return this.rightChannel.start(0);\n    };\n\n    BinauralBeat.prototype._connectOscillators = function () {\n      this.leftChannel.connect(this.channelMerger, 0, 0);\n      return this.rightChannel.connect(this.channelMerger, 0, 1);\n    };\n\n    BinauralBeat.prototype._disconnectOscillators = function () {\n      this.leftChannel.disconnect();\n      return this.rightChannel.disconnect();\n    };\n\n    BinauralBeat.prototype._getChannelFrequency = function (channelNum) {\n      var channelFrequency, frequencyOffset;\n      frequencyOffset = this.beatRate / 2;\n\n      if (channelNum === 0) {\n        channelFrequency = this.pitch - frequencyOffset;\n      } else {\n        channelFrequency = this.pitch + frequencyOffset;\n      }\n\n      return channelFrequency;\n    };\n\n    BinauralBeat.prototype.getChannel = function (channel) {\n      if (channel === 0) {\n        return this.leftChannel;\n      } else if (channel === 1) {\n        return this.rightChannel;\n      }\n    };\n\n    BinauralBeat.prototype.setPitch = function (pitchFreq) {\n      this.pitch = pitchFreq;\n      this.leftChannel.frequency.value = this._getChannelFrequency(0);\n      return this.rightChannel.frequency.value = this._getChannelFrequency(1);\n    };\n\n    BinauralBeat.prototype.setBeatRate = function (beatRate) {\n      this.beatRate = beatRate;\n      return this.setPitch(this.pitch);\n    };\n\n    BinauralBeat.prototype.setWaveType = function (waveType) {\n      this.waveType = waveType;\n      return this.leftChannel.type = this.rightChannel.type = this.waveType;\n    };\n\n    BinauralBeat.prototype.setPeriodicWave = function (periodicWave) {\n      this.leftChannel.setPeriodicWave(periodicWave);\n      return this.rightChannel.setPeriodicWave(periodicWave);\n    };\n\n    BinauralBeat.prototype.start = function () {\n      if (!this.started) {\n        this._startOscillators();\n\n        this.started = true;\n      }\n\n      return this._connectOscillators();\n    };\n\n    BinauralBeat.prototype.stop = function () {\n      return this._disconnectOscillators();\n    };\n\n    BinauralBeat.prototype.connect = function (dest) {\n      return this.output.connect(dest.input ? dest.input : dest);\n    };\n\n    BinauralBeat.prototype.disconnect = function () {\n      return this.output.disconnect();\n    };\n\n    return BinauralBeat;\n  }();\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return BinauralBeat;\n    });\n  } else {\n    if (typeof window === \"object\" && typeof window.document === \"object\") {\n      window.BinauralBeat = BinauralBeat;\n    }\n  }\n}).call(this);\n\nclass Webapp extends Component {\n  constructor() {\n    super();\n\n    this.handlePause = e => {\n      e.preventDefault();\n      this.setState({\n        playing: false\n      });\n    };\n\n    this.handlePlay = e => {\n      e.preventDefault();\n      this.setState({\n        playing: true\n      });\n    };\n\n    this.state = {\n      feelings: [],\n      boosts: [],\n      activities: [],\n      feeling: \"\",\n      boost: \"\",\n      activity: \"\",\n      playing: false,\n      frequency: \"\",\n      id: \"\",\n      frequencies: []\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      feelings: data.feelings,\n      boosts: data.boosts,\n      activities: data.activities\n    });\n  }\n\n  setFeeling(name, f) {\n    this.setState({\n      feeling: name,\n      frequency: f\n    });\n\n    if (this.state.playing) {\n      this.handlePlay();\n    }\n  }\n\n  setBoost(name, f) {\n    this.setState({\n      boost: name,\n      id: f\n    });\n\n    if (this.state.playing) {\n      this.handlePlay();\n    }\n  }\n\n  setActivity(name, f) {\n    this.setState({\n      activity: name,\n      frequencies: f\n    });\n\n    if (this.state.playing) {\n      this.handlePlay();\n    }\n  }\n\n  render() {\n    const feelings = this.state.feelings.map((item, key) => /*#__PURE__*/React.createElement(\"div\", {\n      key: item.name,\n      className: \"feelingContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chakra\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(`../img/feelings/${item.color}.png`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${item.color}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      className: \"frequencyText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }\n    }, item.frequency_range), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }\n    }, \" \", item.title, \" \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 25\n      }\n    }, \" Shift from: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 25\n      }\n    }, \" \", item.shift_from, \" \"), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 25\n      }\n    }, \" Shift to: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 25\n      }\n    }, \" \", item.shift_to, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }\n    }), item.feelings.map((feeling, key) => /*#__PURE__*/React.createElement(\"button\", {\n      key: feeling,\n      value: feeling,\n      className: `btn btn-success ${item.color}`,\n      onClick: e => this.setFeeling(e.target.value, item.frequency),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 25\n      }\n    }, feeling)))));\n    const boost = this.state.boosts.map((item, key) => /*#__PURE__*/React.createElement(\"div\", {\n      key: item.id,\n      className: \"feelingContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chakra\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(`../img/boosts/${item.name}.png`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: `${item.logo}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      className: \"frequencyText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 21\n      }\n    }, item.frequency), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 25\n      }\n    }, \" Shift from: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 25\n      }\n    }, \" \", item.shift_from, \" \"), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 25\n      }\n    }, \" Shift to: \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 25\n      }\n    }, \" \", item.shift_to, \" \"))), /*#__PURE__*/React.createElement(\"button\", {\n      key: item.name,\n      value: item.name,\n      className: `btn btn-success ${item.logo}`,\n      onClick: e => this.setBoost(e.target.value, item.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }\n    }, item.name)));\n    const activity = this.state.activities.map((item, key) => /*#__PURE__*/React.createElement(\"button\", {\n      key: item.name,\n      value: item.name,\n      className: 'btn btn-success activity',\n      onClick: e => this.setActivity(e.target.value, item.frequencies),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }\n    }, item.name));\n    const playable = this.state.feeling !== \"\" && this.state.boost !== \"\" && this.state.activity !== \"\";\n    let player;\n\n    if (playable) {\n      if (this.state.playing) {\n        player = /*#__PURE__*/React.createElement(\"button\", {\n          className: \"glyphicon glyphicon-pause\",\n          onClick: this.handlePause,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 26\n          }\n        });\n      } else {\n        player = /*#__PURE__*/React.createElement(\"button\", {\n          className: \"glyphicon glyphicon-play-circle\",\n          onClick: this.handlePlay,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 26\n          }\n        });\n      }\n    } else {\n      player = /*#__PURE__*/React.createElement(\"button\", {\n        className: \"glyphicon glyphicon-play-circle\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 22\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 13\n      }\n    }, console.log(playable), /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 25\n      }\n    }, \"I WANT TO FEEL\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"selectText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 33\n      }\n    }, this.state.feeling ? this.state.feeling : \"Select Mood\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"overlay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"selector\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 33\n      }\n    }, \"Choose one:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 37\n      }\n    }), feelings)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 25\n      }\n    }, \"AND BOOST MY\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"selectText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 33\n      }\n    }, this.state.boost ? this.state.boost : \"Select Mood\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"overlay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"selector\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 33\n      }\n    }, \"Choose one:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 37\n      }\n    }), boost)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 25\n      }\n    }, \"WHILE I\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"selectText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 33\n      }\n    }, this.state.activity ? this.state.activity : \"Select Mood\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"overlay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"selector\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 33\n      }\n    }, \"Choose one:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 37\n      }\n    }), activity))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bg-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }\n    }, player));\n  }\n\n}\n\nexport default Webapp;","map":{"version":3,"sources":["/Users/AtokAdos/Desktop/CS_Projects/U4Ea/u4ea/client/src/components/Webapp.js"],"names":["React","Component","Header","data","BinauralBeat","SINE","SQUARE","SAWTOOTH","TRIANGLE","ctx","options","_ref","_ref1","_ref2","_ref3","input","createGain","output","pitch","beatRate","beats","waveType","constructor","compressNodes","started","_createInternalNodes","_routeNodes","setPitch","setWaveType","prototype","leftChannel","createOscillator","rightChannel","channelMerger","createChannelMerger","compressor","createDynamicsCompressor","connect","_startOscillators","start","_connectOscillators","_disconnectOscillators","disconnect","_getChannelFrequency","channelNum","channelFrequency","frequencyOffset","getChannel","channel","pitchFreq","frequency","value","setBeatRate","type","setPeriodicWave","periodicWave","stop","dest","define","amd","window","document","call","Webapp","handlePause","e","preventDefault","setState","playing","handlePlay","state","feelings","boosts","activities","feeling","boost","activity","id","frequencies","componentWillMount","setFeeling","name","f","setBoost","setActivity","render","map","item","key","require","color","frequency_range","title","shift_from","shift_to","target","logo","playable","player","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAO,kBAAP;AACA,OAAOC,IAAP,MAAiB,cAAjB;AAGA,CAAC,YAAW;AACR,MAAIC,YAAJ;;AAEAA,EAAAA,YAAY,GAAI,YAAW;AACzBA,IAAAA,YAAY,CAACC,IAAb,GAAoB,MAApB;AAEAD,IAAAA,YAAY,CAACE,MAAb,GAAsB,QAAtB;AAEAF,IAAAA,YAAY,CAACG,QAAb,GAAwB,UAAxB;AAEAH,IAAAA,YAAY,CAACI,QAAb,GAAwB,UAAxB;;AAEA,aAASJ,YAAT,CAAsBK,GAAtB,EAA2BC,OAA3B,EAAoC;AAClC,UAAIC,IAAJ,EAAUC,KAAV,EAAiBC,KAAjB,EAAwBC,KAAxB;;AACA,WAAKC,KAAL,GAAaN,GAAG,CAACO,UAAJ,EAAb;AACA,WAAKC,MAAL,GAAcR,GAAG,CAACO,UAAJ,EAAd;AACAN,MAAAA,OAAO,GAAGA,OAAO,IAAI,IAAX,GAAkBA,OAAlB,GAA4B,EAAtC;AACA,WAAKQ,KAAL,GAAa,CAACP,IAAI,GAAGD,OAAO,CAACQ,KAAhB,KAA0B,IAA1B,GAAiCP,IAAjC,GAAwC,GAArD;AACA,WAAKQ,QAAL,GAAgB,CAACP,KAAK,GAAGF,OAAO,CAACU,KAAjB,KAA2B,IAA3B,GAAkCR,KAAlC,GAA0C,CAA1D;AACA,WAAKS,QAAL,GAAgB,CAACR,KAAK,GAAGH,OAAO,CAACW,QAAjB,KAA8B,IAA9B,GAAqCR,KAArC,GAA6C,KAAKS,WAAL,CAAiBjB,IAA9E;AACA,WAAKkB,aAAL,GAAqB,CAACT,KAAK,GAAGJ,OAAO,CAACa,aAAjB,KAAmC,IAAnC,GAA0CT,KAA1C,GAAkD,KAAvE;AACA,WAAKU,OAAL,GAAe,KAAf;;AACA,WAAKC,oBAAL,CAA0BhB,GAA1B;;AACA,WAAKiB,WAAL;;AACA,WAAKC,QAAL,CAAc,KAAKT,KAAnB;AACA,WAAKU,WAAL,CAAiB,KAAKP,QAAtB;AACD;;AAEDjB,IAAAA,YAAY,CAACyB,SAAb,CAAuBJ,oBAAvB,GAA8C,UAAShB,GAAT,EAAc;AAC1D,WAAKqB,WAAL,GAAmBrB,GAAG,CAACsB,gBAAJ,EAAnB;AACA,WAAKC,YAAL,GAAoBvB,GAAG,CAACsB,gBAAJ,EAApB;AACA,WAAKE,aAAL,GAAqBxB,GAAG,CAACyB,mBAAJ,EAArB;AACA,aAAO,KAAKC,UAAL,GAAkB1B,GAAG,CAAC2B,wBAAJ,EAAzB;AACD,KALD;;AAOAhC,IAAAA,YAAY,CAACyB,SAAb,CAAuBH,WAAvB,GAAqC,YAAW;AAC9C,UAAI,KAAKH,aAAT,EAAwB;AACtB,aAAKR,KAAL,CAAWsB,OAAX,CAAmB,KAAKF,UAAxB;AACA,aAAKF,aAAL,CAAmBI,OAAnB,CAA2B,KAAKF,UAAhC;AACA,eAAO,KAAKA,UAAL,CAAgBE,OAAhB,CAAwB,KAAKpB,MAA7B,CAAP;AACD,OAJD,MAIO;AACL,aAAKF,KAAL,CAAWsB,OAAX,CAAmB,KAAKpB,MAAxB;AACA,eAAO,KAAKgB,aAAL,CAAmBI,OAAnB,CAA2B,KAAKpB,MAAhC,CAAP;AACD;AACF,KATD;;AAWAb,IAAAA,YAAY,CAACyB,SAAb,CAAuBS,iBAAvB,GAA2C,YAAW;AACpD,WAAKR,WAAL,CAAiBS,KAAjB,CAAuB,CAAvB;AACA,aAAO,KAAKP,YAAL,CAAkBO,KAAlB,CAAwB,CAAxB,CAAP;AACD,KAHD;;AAKAnC,IAAAA,YAAY,CAACyB,SAAb,CAAuBW,mBAAvB,GAA6C,YAAW;AACtD,WAAKV,WAAL,CAAiBO,OAAjB,CAAyB,KAAKJ,aAA9B,EAA6C,CAA7C,EAAgD,CAAhD;AACA,aAAO,KAAKD,YAAL,CAAkBK,OAAlB,CAA0B,KAAKJ,aAA/B,EAA8C,CAA9C,EAAiD,CAAjD,CAAP;AACD,KAHD;;AAKA7B,IAAAA,YAAY,CAACyB,SAAb,CAAuBY,sBAAvB,GAAgD,YAAW;AACzD,WAAKX,WAAL,CAAiBY,UAAjB;AACA,aAAO,KAAKV,YAAL,CAAkBU,UAAlB,EAAP;AACD,KAHD;;AAKAtC,IAAAA,YAAY,CAACyB,SAAb,CAAuBc,oBAAvB,GAA8C,UAASC,UAAT,EAAqB;AACjE,UAAIC,gBAAJ,EAAsBC,eAAtB;AACAA,MAAAA,eAAe,GAAG,KAAK3B,QAAL,GAAgB,CAAlC;;AACA,UAAIyB,UAAU,KAAK,CAAnB,EAAsB;AACpBC,QAAAA,gBAAgB,GAAG,KAAK3B,KAAL,GAAa4B,eAAhC;AACD,OAFD,MAEO;AACLD,QAAAA,gBAAgB,GAAG,KAAK3B,KAAL,GAAa4B,eAAhC;AACD;;AACD,aAAOD,gBAAP;AACD,KATD;;AAWAzC,IAAAA,YAAY,CAACyB,SAAb,CAAuBkB,UAAvB,GAAoC,UAASC,OAAT,EAAkB;AACpD,UAAIA,OAAO,KAAK,CAAhB,EAAmB;AACjB,eAAO,KAAKlB,WAAZ;AACD,OAFD,MAEO,IAAIkB,OAAO,KAAK,CAAhB,EAAmB;AACxB,eAAO,KAAKhB,YAAZ;AACD;AACF,KAND;;AAQA5B,IAAAA,YAAY,CAACyB,SAAb,CAAuBF,QAAvB,GAAkC,UAASsB,SAAT,EAAoB;AACpD,WAAK/B,KAAL,GAAa+B,SAAb;AACA,WAAKnB,WAAL,CAAiBoB,SAAjB,CAA2BC,KAA3B,GAAmC,KAAKR,oBAAL,CAA0B,CAA1B,CAAnC;AACA,aAAO,KAAKX,YAAL,CAAkBkB,SAAlB,CAA4BC,KAA5B,GAAoC,KAAKR,oBAAL,CAA0B,CAA1B,CAA3C;AACD,KAJD;;AAMAvC,IAAAA,YAAY,CAACyB,SAAb,CAAuBuB,WAAvB,GAAqC,UAASjC,QAAT,EAAmB;AACtD,WAAKA,QAAL,GAAgBA,QAAhB;AACA,aAAO,KAAKQ,QAAL,CAAc,KAAKT,KAAnB,CAAP;AACD,KAHD;;AAKAd,IAAAA,YAAY,CAACyB,SAAb,CAAuBD,WAAvB,GAAqC,UAASP,QAAT,EAAmB;AACtD,WAAKA,QAAL,GAAgBA,QAAhB;AACA,aAAO,KAAKS,WAAL,CAAiBuB,IAAjB,GAAwB,KAAKrB,YAAL,CAAkBqB,IAAlB,GAAyB,KAAKhC,QAA7D;AACD,KAHD;;AAKAjB,IAAAA,YAAY,CAACyB,SAAb,CAAuByB,eAAvB,GAAyC,UAASC,YAAT,EAAuB;AAC9D,WAAKzB,WAAL,CAAiBwB,eAAjB,CAAiCC,YAAjC;AACA,aAAO,KAAKvB,YAAL,CAAkBsB,eAAlB,CAAkCC,YAAlC,CAAP;AACD,KAHD;;AAKAnD,IAAAA,YAAY,CAACyB,SAAb,CAAuBU,KAAvB,GAA+B,YAAW;AACxC,UAAI,CAAC,KAAKf,OAAV,EAAmB;AACjB,aAAKc,iBAAL;;AACA,aAAKd,OAAL,GAAe,IAAf;AACD;;AACD,aAAO,KAAKgB,mBAAL,EAAP;AACD,KAND;;AAQApC,IAAAA,YAAY,CAACyB,SAAb,CAAuB2B,IAAvB,GAA8B,YAAW;AACvC,aAAO,KAAKf,sBAAL,EAAP;AACD,KAFD;;AAIArC,IAAAA,YAAY,CAACyB,SAAb,CAAuBQ,OAAvB,GAAiC,UAASoB,IAAT,EAAe;AAC9C,aAAO,KAAKxC,MAAL,CAAYoB,OAAZ,CAAoBoB,IAAI,CAAC1C,KAAL,GAAa0C,IAAI,CAAC1C,KAAlB,GAA0B0C,IAA9C,CAAP;AACD,KAFD;;AAIArD,IAAAA,YAAY,CAACyB,SAAb,CAAuBa,UAAvB,GAAoC,YAAW;AAC7C,aAAO,KAAKzB,MAAL,CAAYyB,UAAZ,EAAP;AACD,KAFD;;AAIA,WAAOtC,YAAP;AAED,GAxHc,EAAf;;AA0HA,MAAI,OAAOsD,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EAAgD;AAC9CD,IAAAA,MAAM,CAAC,YAAW;AAChB,aAAOtD,YAAP;AACD,KAFK,CAAN;AAGD,GAJD,MAIO;AACL,QAAI,OAAOwD,MAAP,KAAkB,QAAlB,IAA8B,OAAOA,MAAM,CAACC,QAAd,KAA2B,QAA7D,EAAuE;AACrED,MAAAA,MAAM,CAACxD,YAAP,GAAsBA,YAAtB;AACD;AACF;AAEF,CAvIH,EAuIK0D,IAvIL,CAuIU,IAvIV;;AA0IA,MAAMC,MAAN,SAAqB9D,SAArB,CAA+B;AAC3BqB,EAAAA,WAAW,GAAG;AACV;;AADU,SAwDd0C,WAxDc,GAwDAC,CAAC,IAAI;AACfA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE;AADC,OAAd;AAGH,KA7Da;;AAAA,SA+DdC,UA/Dc,GA+DDJ,CAAC,IAAI;AACdA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE;AADC,OAAd;AAIH,KArEa;;AAEV,SAAKE,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,MAAM,EAAE,EAFC;AAGTC,MAAAA,UAAU,EACN,EAJK;AAKTC,MAAAA,OAAO,EAAE,EALA;AAMTC,MAAAA,KAAK,EAAE,EANE;AAOTC,MAAAA,QAAQ,EAAE,EAPD;AAQTR,MAAAA,OAAO,EAAE,KARA;AASTlB,MAAAA,SAAS,EAAE,EATF;AAUT2B,MAAAA,EAAE,EAAE,EAVK;AAWTC,MAAAA,WAAW,EAAE;AAXJ,KAAb;AAaH;;AAEDC,EAAAA,kBAAkB,GAAG;AACjB,SAAKZ,QAAL,CAAc;AACVI,MAAAA,QAAQ,EAAEpE,IAAI,CAACoE,QADL;AAEVC,MAAAA,MAAM,EAAErE,IAAI,CAACqE,MAFH;AAGVC,MAAAA,UAAU,EAAEtE,IAAI,CAACsE;AAHP,KAAd;AAMH;;AAEDO,EAAAA,UAAU,CAACC,IAAD,EAAOC,CAAP,EAAU;AAChB,SAAKf,QAAL,CAAc;AACVO,MAAAA,OAAO,EAAEO,IADC;AAEV/B,MAAAA,SAAS,EAAEgC;AAFD,KAAd;;AAIA,QAAI,KAAKZ,KAAL,CAAWF,OAAf,EAAwB;AACpB,WAAKC,UAAL;AACH;AACJ;;AAEDc,EAAAA,QAAQ,CAACF,IAAD,EAAOC,CAAP,EAAU;AACd,SAAKf,QAAL,CAAc;AACVQ,MAAAA,KAAK,EAAEM,IADG;AAEVJ,MAAAA,EAAE,EAAEK;AAFM,KAAd;;AAIA,QAAI,KAAKZ,KAAL,CAAWF,OAAf,EAAwB;AACpB,WAAKC,UAAL;AACH;AACJ;;AAEDe,EAAAA,WAAW,CAACH,IAAD,EAAOC,CAAP,EAAU;AACjB,SAAKf,QAAL,CAAc;AACVS,MAAAA,QAAQ,EAAEK,IADA;AAEVH,MAAAA,WAAW,EAAEI;AAFH,KAAd;;AAIA,QAAI,KAAKZ,KAAL,CAAWF,OAAf,EAAwB;AACpB,WAAKC,UAAL;AACH;AACJ;;AAiBDgB,EAAAA,MAAM,GAAG;AACL,UAAMd,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBe,GAApB,CAAwB,CAACC,IAAD,EAAOC,GAAP,kBACrC;AAAK,MAAA,GAAG,EAAED,IAAI,CAACN,IAAf;AAAqB,MAAA,SAAS,EAAC,kBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,GAAG,EAAEQ,OAAO,CAAE,mBAAkBF,IAAI,CAACG,KAAM,MAA/B,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAII;AAAK,MAAA,SAAS,EAAG,GAAEH,IAAI,CAACG,KAAM,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BH,IAAI,CAACI,eAAnC,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAKJ,IAAI,CAACK,KAAV,MAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAKI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAKL,IAAI,CAACM,UAAV,MAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAKN,IAAI,CAACO,QAAV,MAJJ,CALJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,EAaKP,IAAI,CAAChB,QAAL,CAAce,GAAd,CAAkB,CAACZ,OAAD,EAAUc,GAAV,kBACf;AAAQ,MAAA,GAAG,EAAEd,OAAb;AAAsB,MAAA,KAAK,EAAEA,OAA7B;AAAsC,MAAA,SAAS,EAAG,mBAAkBa,IAAI,CAACG,KAAM,EAA/E;AAAkF,MAAA,OAAO,EAAEzB,CAAC,IAAI,KAAKe,UAAL,CAAgBf,CAAC,CAAC8B,MAAF,CAAS5C,KAAzB,EAAgCoC,IAAI,CAACrC,SAArC,CAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKwB,OADL,CADH,CAbL,CAJJ,CADa,CAAjB;AA2BA,UAAMC,KAAK,GAAG,KAAKL,KAAL,CAAWE,MAAX,CAAkBc,GAAlB,CAAsB,CAACC,IAAD,EAAOC,GAAP,kBAChC;AAAK,MAAA,GAAG,EAAED,IAAI,CAACV,EAAf;AAAmB,MAAA,SAAS,EAAC,kBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,GAAG,EAAEY,OAAO,CAAE,iBAAgBF,IAAI,CAACN,IAAK,MAA5B,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAII;AAAK,MAAA,SAAS,EAAG,GAAEM,IAAI,CAACS,IAAK,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BT,IAAI,CAACrC,SAAnC,CADJ,eAGI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAKqC,IAAI,CAACM,UAAV,MAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAKN,IAAI,CAACO,QAAV,MAJJ,CAHJ,CAJJ,eAcI;AAAQ,MAAA,GAAG,EAAEP,IAAI,CAACN,IAAlB;AAAwB,MAAA,KAAK,EAAEM,IAAI,CAACN,IAApC;AAA0C,MAAA,SAAS,EAAG,mBAAkBM,IAAI,CAACS,IAAK,EAAlF;AAAqF,MAAA,OAAO,EAAE/B,CAAC,IAAI,KAAKkB,QAAL,CAAclB,CAAC,CAAC8B,MAAF,CAAS5C,KAAvB,EAA8BoC,IAAI,CAACV,EAAnC,CAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKU,IAAI,CAACN,IADV,CAdJ,CADU,CAAd;AAsBA,UAAML,QAAQ,GAAG,KAAKN,KAAL,CAAWG,UAAX,CAAsBa,GAAtB,CAA0B,CAACC,IAAD,EAAOC,GAAP,kBACvC;AAAQ,MAAA,GAAG,EAAED,IAAI,CAACN,IAAlB;AAAwB,MAAA,KAAK,EAAEM,IAAI,CAACN,IAApC;AAA0C,MAAA,SAAS,EAAE,0BAArD;AAAiF,MAAA,OAAO,EAAEhB,CAAC,IAAI,KAAKmB,WAAL,CAAiBnB,CAAC,CAAC8B,MAAF,CAAS5C,KAA1B,EAAiCoC,IAAI,CAACT,WAAtC,CAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKS,IAAI,CAACN,IADV,CADa,CAAjB;AAMA,UAAMgB,QAAQ,GAAK,KAAK3B,KAAL,CAAWI,OAAX,KAAuB,EAAxB,IACb,KAAKJ,KAAL,CAAWK,KAAX,KAAqB,EADR,IAEb,KAAKL,KAAL,CAAWM,QAAX,KAAwB,EAF7B;AAIA,QAAIsB,MAAJ;;AACA,QAAID,QAAJ,EAAc;AACV,UAAI,KAAK3B,KAAL,CAAWF,OAAf,EAAwB;AACpB8B,QAAAA,MAAM,gBAAG;AAAQ,UAAA,SAAS,EAAC,2BAAlB;AAA8C,UAAA,OAAO,EAAE,KAAKlC,WAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AACH,OAFD,MAEO;AACHkC,QAAAA,MAAM,gBAAG;AAAQ,UAAA,SAAS,EAAC,iCAAlB;AAAoD,UAAA,OAAO,EAAE,KAAK7B,UAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AACH;AACJ,KAND,MAMO;AACH6B,MAAAA,MAAM,gBAAG;AAAQ,QAAA,SAAS,EAAC,iCAAlB;AAAoD,QAAA,QAAQ,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAT;AACH;;AAED,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,OAAO,CAACC,GAAR,CAAYH,QAAZ,CADL,eAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK3B,KAAL,CAAWI,OAAX,GAAqB,KAAKJ,KAAL,CAAWI,OAAhC,GAA0C,aAD/C,CADJ,CAHJ,eAQI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGKH,QAHL,CADJ,CARJ,CADJ,CADJ,eAmBI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,KAAL,CAAWK,KAAX,GAAmB,KAAKL,KAAL,CAAWK,KAA9B,GAAsC,aAD3C,CADJ,CAHJ,eAQI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGKA,KAHL,CADJ,CARJ,CADJ,CAnBJ,eAqCI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKL,KAAL,CAAWM,QAAX,GAAsB,KAAKN,KAAL,CAAWM,QAAjC,GAA4C,aADjD,CADJ,CAHJ,eAQI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGKA,QAHL,CADJ,CARJ,CADJ,CArCJ,CAHJ,eA2DI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKsB,MADL,CA3DJ,CADJ;AAiEH;;AAhN0B;;AAmN/B,eAAenC,MAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport Header from \"./Header.js\"\n\nimport \"../css/style.css\";\nimport data from '../data.json';\n\n\n(function() {\n    var BinauralBeat;\n  \n    BinauralBeat = (function() {\n      BinauralBeat.SINE = 'sine';\n  \n      BinauralBeat.SQUARE = 'square';\n  \n      BinauralBeat.SAWTOOTH = 'sawtooth';\n  \n      BinauralBeat.TRIANGLE = 'triangle';\n  \n      function BinauralBeat(ctx, options) {\n        var _ref, _ref1, _ref2, _ref3;\n        this.input = ctx.createGain();\n        this.output = ctx.createGain();\n        options = options != null ? options : {};\n        this.pitch = (_ref = options.pitch) != null ? _ref : 440;\n        this.beatRate = (_ref1 = options.beats) != null ? _ref1 : 5;\n        this.waveType = (_ref2 = options.waveType) != null ? _ref2 : this.constructor.SINE;\n        this.compressNodes = (_ref3 = options.compressNodes) != null ? _ref3 : false;\n        this.started = false;\n        this._createInternalNodes(ctx);\n        this._routeNodes();\n        this.setPitch(this.pitch);\n        this.setWaveType(this.waveType);\n      }\n  \n      BinauralBeat.prototype._createInternalNodes = function(ctx) {\n        this.leftChannel = ctx.createOscillator();\n        this.rightChannel = ctx.createOscillator();\n        this.channelMerger = ctx.createChannelMerger();\n        return this.compressor = ctx.createDynamicsCompressor();\n      };\n  \n      BinauralBeat.prototype._routeNodes = function() {\n        if (this.compressNodes) {\n          this.input.connect(this.compressor);\n          this.channelMerger.connect(this.compressor);\n          return this.compressor.connect(this.output);\n        } else {\n          this.input.connect(this.output);\n          return this.channelMerger.connect(this.output);\n        }\n      };\n  \n      BinauralBeat.prototype._startOscillators = function() {\n        this.leftChannel.start(0);\n        return this.rightChannel.start(0);\n      };\n  \n      BinauralBeat.prototype._connectOscillators = function() {\n        this.leftChannel.connect(this.channelMerger, 0, 0);\n        return this.rightChannel.connect(this.channelMerger, 0, 1);\n      };\n  \n      BinauralBeat.prototype._disconnectOscillators = function() {\n        this.leftChannel.disconnect();\n        return this.rightChannel.disconnect();\n      };\n  \n      BinauralBeat.prototype._getChannelFrequency = function(channelNum) {\n        var channelFrequency, frequencyOffset;\n        frequencyOffset = this.beatRate / 2;\n        if (channelNum === 0) {\n          channelFrequency = this.pitch - frequencyOffset;\n        } else {\n          channelFrequency = this.pitch + frequencyOffset;\n        }\n        return channelFrequency;\n      };\n  \n      BinauralBeat.prototype.getChannel = function(channel) {\n        if (channel === 0) {\n          return this.leftChannel;\n        } else if (channel === 1) {\n          return this.rightChannel;\n        }\n      };\n  \n      BinauralBeat.prototype.setPitch = function(pitchFreq) {\n        this.pitch = pitchFreq;\n        this.leftChannel.frequency.value = this._getChannelFrequency(0);\n        return this.rightChannel.frequency.value = this._getChannelFrequency(1);\n      };\n  \n      BinauralBeat.prototype.setBeatRate = function(beatRate) {\n        this.beatRate = beatRate;\n        return this.setPitch(this.pitch);\n      };\n  \n      BinauralBeat.prototype.setWaveType = function(waveType) {\n        this.waveType = waveType;\n        return this.leftChannel.type = this.rightChannel.type = this.waveType;\n      };\n  \n      BinauralBeat.prototype.setPeriodicWave = function(periodicWave) {\n        this.leftChannel.setPeriodicWave(periodicWave);\n        return this.rightChannel.setPeriodicWave(periodicWave);\n      };\n  \n      BinauralBeat.prototype.start = function() {\n        if (!this.started) {\n          this._startOscillators();\n          this.started = true;\n        }\n        return this._connectOscillators();\n      };\n  \n      BinauralBeat.prototype.stop = function() {\n        return this._disconnectOscillators();\n      };\n  \n      BinauralBeat.prototype.connect = function(dest) {\n        return this.output.connect(dest.input ? dest.input : dest);\n      };\n  \n      BinauralBeat.prototype.disconnect = function() {\n        return this.output.disconnect();\n      };\n  \n      return BinauralBeat;\n  \n    })();\n  \n    if (typeof define === 'function' && define.amd) {\n      define(function() {\n        return BinauralBeat;\n      });\n    } else {\n      if (typeof window === \"object\" && typeof window.document === \"object\") {\n        window.BinauralBeat = BinauralBeat;\n      }\n    }\n  \n  }).call(this);\n\n\nclass Webapp extends Component {\n    constructor() {\n        super();\n        this.state = {\n            feelings: [],\n            boosts: [],\n            activities:\n                [],\n            feeling: \"\",\n            boost: \"\",\n            activity: \"\",\n            playing: false,\n            frequency: \"\",\n            id: \"\",\n            frequencies: [],\n        }\n    }\n\n    componentWillMount() {\n        this.setState({\n            feelings: data.feelings,\n            boosts: data.boosts,\n            activities: data.activities,\n        })\n\n    }\n\n    setFeeling(name, f) {\n        this.setState({\n            feeling: name,\n            frequency: f,\n        })\n        if (this.state.playing) {\n            this.handlePlay()\n        }\n    }\n\n    setBoost(name, f) {\n        this.setState({\n            boost: name,\n            id: f,\n        })\n        if (this.state.playing) {\n            this.handlePlay()\n        }\n    }\n\n    setActivity(name, f) {\n        this.setState({\n            activity: name,\n            frequencies: f,\n        })\n        if (this.state.playing) {\n            this.handlePlay()\n        }\n    }\n\n    handlePause = e => {\n        e.preventDefault();\n        this.setState({\n            playing: false\n        })\n    }\n\n    handlePlay = e => {\n        e.preventDefault();\n        this.setState({\n            playing: true\n        })\n\n    }\n\n    render() {\n        const feelings = this.state.feelings.map((item, key) =>\n            <div key={item.name} className=\"feelingContainer\">\n                <div className=\"chakra\">\n                    <img src={require(`../img/feelings/${item.color}.png`)} />\n                </div>\n                <div className={`${item.color}`}>\n                    <b className=\"frequencyText\">{item.frequency_range}</b>\n                    <br />\n                    <b> {item.title} </b>\n                    <br />\n                    <div className=\"details\">\n                        <b> Shift from: </b>\n                        <p> {item.shift_from} </p>\n                        <b> Shift to: </b>\n                        <p> {item.shift_to} </p>\n                    </div>\n                    <div>\n                    </div>\n                    {item.feelings.map((feeling, key) => (\n                        <button key={feeling} value={feeling} className={`btn btn-success ${item.color}`} onClick={e => this.setFeeling(e.target.value, item.frequency)}>\n                            {feeling}\n                        </button>\n                    ))}\n                </div>\n            </div>\n        );\n\n        const boost = this.state.boosts.map((item, key) =>\n            <div key={item.id} className=\"feelingContainer\">\n                <div className=\"chakra\">\n                    <img src={require(`../img/boosts/${item.name}.png`)} />\n                </div>\n                <div className={`${item.logo}`}>\n                    <b className=\"frequencyText\">{item.frequency}</b>\n\n                    <div className=\"details\">\n                        <b> Shift from: </b>\n                        <p> {item.shift_from} </p>\n                        <b> Shift to: </b>\n                        <p> {item.shift_to} </p>\n                    </div>\n                </div>\n                <button key={item.name} value={item.name} className={`btn btn-success ${item.logo}`} onClick={e => this.setBoost(e.target.value, item.id)}>\n                    {item.name}\n                </button>\n\n            </div>\n        )\n\n        const activity = this.state.activities.map((item, key) =>\n            <button key={item.name} value={item.name} className={'btn btn-success activity'} onClick={e => this.setActivity(e.target.value, item.frequencies)}>\n                {item.name}\n            </button>\n        );\n\n        const playable = ((this.state.feeling !== \"\") &&\n            (this.state.boost !== \"\") &&\n            (this.state.activity !== \"\"))\n\n        let player;\n        if (playable) {\n            if (this.state.playing) {\n                player = <button className=\"glyphicon glyphicon-pause\" onClick={this.handlePause}></button>\n            } else {\n                player = <button className=\"glyphicon glyphicon-play-circle\" onClick={this.handlePlay}></button>\n            }\n        } else {\n            player = <button className=\"glyphicon glyphicon-play-circle\" disabled></button>\n        }\n\n        return (\n            <div>\n                {console.log(playable)}\n                <Header />\n                <div>\n                    <div className=\"div1\">\n                        <div className=\"text\">\n                            I WANT TO FEEL\n                            <br />\n                            <div className=\"selectText\">\n                                <b>\n                                    {this.state.feeling ? this.state.feeling : \"Select Mood\"}\n                                </b>\n                            </div>\n                            <div className=\"overlay\">\n                                <div className=\"selector\">\n                                    Choose one:\n                                    <br />\n                                    {feelings}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"div2\">\n                        <div className=\"text\">\n                            AND BOOST MY\n                            <br />\n                            <div className=\"selectText\">\n                                <b>\n                                    {this.state.boost ? this.state.boost : \"Select Mood\"}\n                                </b>\n                            </div>\n                            <div className=\"overlay\">\n                                <div className=\"selector\">\n                                    Choose one:\n                                    <br />\n                                    {boost}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"div3\">\n                        <div className=\"text\">\n                            WHILE I\n                            <br />\n                            <div className=\"selectText\">\n                                <b>\n                                    {this.state.activity ? this.state.activity : \"Select Mood\"}\n                                </b>\n                            </div>\n                            <div className=\"overlay\">\n                                <div className=\"selector\">\n                                    Choose one:\n                                    <br />\n                                    {activity}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"bg-light\">\n                    {player}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Webapp;"]},"metadata":{},"sourceType":"module"}